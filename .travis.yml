# https://travis-ci.com/spyder-ide/conda-manager
language: python
sudo: false

env:
  global:
    # Used by qthelpers to close widgets after a defined time
    - TEST_CI="True"
    # Environment variables used by astropy helpers
    - CONDA_DEPENDENCIES="anaconda-client pillow pyyaml qtawesome qtpy requests"
    - PIP_DEPENDENCIES="coveralls pytest-qt"

matrix:
  include:
    # PyQt5
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.5 USE_QT_API=PyQt5
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.4 USE_QT_API=PyQt5
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=2.7 USE_QT_API=PyQt5
    # PySide2
#    - os: osx
#      language: generic
#      env: TRAVIS_PYTHON_VERSION=3.5 USE_QT_API=PySide2
#    - os: osx
#      language: generic
#      env: TRAVIS_PYTHON_VERSION=3.4 USE_QT_API=PySide2
#    - os: osx
#      language: generic
#      env: TRAVIS_PYTHON_VERSION=2.7 USE_QT_API=PySide2
    # PyQt4
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.5 USE_QT_API=PyQt4
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.4 USE_QT_API=PyQt4
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=2.7 USE_QT_API=PyQt4
    # PySide
#    - os: osx
#      language: generic
#      env: TRAVIS_PYTHON_VERSION=2.7 USE_QT_API=PySide


install:
  # Use Astropy ci helpers for initial setup
  - git clone git://github.com/astropy/ci-helpers.git
  - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh
  # Install the selected Qt version
  - if [[ "$USE_QT_API" == "PyQt5" ]]; then
      $CONDA_INSTALL qt=5.* pyqt=5.*;
    elif [[ "$USE_QT_API" == "PySide2" ]]; then
      $CONDA_INSTALL qt=5.* pyside2;
    elif [[ "$USE_QT_API" == "PyQt4" ]]; then
      $CONDA_INSTALL qt=4.* pyqt=4.*;
    elif [[ "$USE_QT_API" == "PySide" ]]; then
      $CONDA_INSTALL qt=4.* pyside;
    fi
  - $CONDA_INSTALL ciocheck -c conda-forge
  - python setup.py develop

script:
  - ciocheck conda_manager
  - conda-manager

after_success:
  - coveralls
